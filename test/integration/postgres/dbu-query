#!/bin/bash
. test/integration/helper

setup () {
export DBU_ENVIRONMENT=postgres
}

#
# queries
#

test_dbu_query_prints_tables () {
dbu conn <<SQL
drop table if exists example;
create table example (id int);
SQL

dbu query tables | grep -q example
}

test_dbu_query_prints_columns_for_table () {
dbu conn <<SQL
drop table if exists example;
create table example (id int);
SQL

dbu query columns example | assert_output "\
id	integer
"
}

#
# usage
#

test_dbu_query_executes_query_as_sql () {
dbu conn <<SQL
drop table if exists example;
create table example (id int);
SQL

export DBU_LOG_FORMAT='[] %l %m\n'
dbu query columns example -v 2>&1 | sed -e 's/".*"/"..."/' | assert_output "\
[] INFO register columns
[] INFO exec \"...\"
id	integer
"
}

#
# -s
#

test_dbu_query_s_prints_sql () {
dbu query columns example -s | assert_output "\
select column_name,
       data_type
  from information_schema.columns
 where table_name = 'example'
 order by column_name;
"
}

#
# -p
#

test_dbu_query_p_executes_query_using_prepare () {
dbu conn <<SQL
drop table if exists example;
create table example (id int);
SQL

export DBU_LOG_FORMAT='[] %l %m\n'
dbu query columns example -p -v 2>&1 | sed -e 's/".*"/"..."/' | assert_output "\
[] INFO register columns
[] INFO prepare columns_query \"...\"
[] INFO execute columns_query [\"...\"]
[] INFO deallocate columns_query
id	integer
"
}

test_dbu_query_ps_prints_prepare_sql () {
dbu query columns example -ps | assert_output "\
prepare columns_query as
select column_name,
       data_type
  from information_schema.columns
 where table_name = \$1
 order by column_name;
execute columns_query('example');
deallocate columns_query;
"
}

. ts
